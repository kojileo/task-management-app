name: E2Eテスト

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  e2e-test:
    name: E2Eテスト実行
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v4
      
      - name: Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            e2e/package-lock.json
      
      - name: .NET セットアップ
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      - name: E2Eテスト依存関係のインストール
        working-directory: e2e
        run: |
          npm ci
          npx playwright install --with-deps chromium
      
      - name: バックエンドのビルドと起動
        run: |
          cd backend/TaskManagement.API
          dotnet build --configuration Release
          dotnet run --configuration Release --urls=http://localhost:5045 &
          echo "BACKEND_PID=$!" >> $GITHUB_ENV
          
          # バックエンドの起動を確認
          max_retries=30
          counter=0
          while ! curl -sSf http://localhost:5045/api/health > /dev/null 2>&1; do
            sleep 2
            counter=$((counter + 1))
            if [ $counter -ge $max_retries ]; then
              echo "バックエンドの起動タイムアウト"
              exit 1
            fi
          done
          echo "バックエンド起動確認: OK"
      
      - name: フロントエンドのビルドと起動
        run: |
          cd frontend
          npm ci
          npm run build
          npm run start &
          echo "FRONTEND_PID=$!" >> $GITHUB_ENV
          
          # フロントエンドの起動を確認
          max_retries=15
          counter=0
          while ! curl -sSf http://localhost:3000 > /dev/null 2>&1; do
            sleep 2
            counter=$((counter + 1))
            if [ $counter -ge $max_retries ]; then
              echo "フロントエンドの起動タイムアウト"
              exit 1
            fi
          done
          echo "フロントエンド起動確認: OK"
      
      - name: E2Eテスト実行
        working-directory: e2e
        run: |
          export CI=true
          npm test
      
      - name: テストレポートのアップロード
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: e2e/playwright-report/
          retention-days: 30
      
      - name: テスト結果の詳細（失敗時）
        if: failure()
        working-directory: e2e
        run: |
          echo "テスト失敗の詳細情報:"
          find test-results -type f -name "*.png" | sort
      
      - name: プロセスの終了処理
        if: always()
        run: |
          if [[ -n "${FRONTEND_PID}" ]]; then
            kill $FRONTEND_PID || true
          fi
          if [[ -n "${BACKEND_PID}" ]]; then
            kill $BACKEND_PID || true
          fi 